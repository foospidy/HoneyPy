# HoneyPy/etc/honeypy.cfg
# https://github.com/foospidy/HoneyPy

[honeypy]
hostname  = server01
# select any name for this HoneyPy node, it can be anything you want.
# It will be displayed in tweets, Slack messages, and other integrations.
nodename  =
useragent = HoneyPy

# Tweet events on Twitter. Having a dedicated Twitter account for this purpose is recommended.
# You will need to Twitter API credentials for this to work. See https://dev.twitter.com/oauth/application-only
[twitter]
enabled        = No
consumerkey    =
consumersecret =
oauthtoken     =
oauthsecret    =

########################################################################################################
# Animus is dead! (http://morris.guru/the-life-and-death-of-animus/) This feature should be use no more.
# enable tweats to include querying Animus Threat Bot (https://github.com/threatbot)
# ask_animus     = No
########################################################################################################

# Post your events to HoneyDB. Your HoneyPy honepots can contribute threat information to HoneyDB.
# You will need to create API credentails for this to work. See https://riskdiscovery.com/honeydb/#threats
[honeydb]
enabled = No
url     = https://riskdiscovery.com/honeydb/api/logger
api_id  =
api_key =

# Post your events to a Slack channel. Having a dedicated Slack channel for this is recommended.
# For setting up your Slack webhook see https://api.slack.com/incoming-webhooks
[slack]
enabled     = No
webhook_url =

[logstash]
enabled = No
host    =
port    =

[elasticsearch]
enabled = No
# Elasticsearch url should include ":port/index/type
# example: http://localhost:9200/honeypot/honeypy
es_url  =

[telegram]
# You need to add your bot to channel or group, and get the bot token see https://core.telegram.org/bots
enabled = No
# Telegram bot HTTP API Token
bot_id =

[splunk]
enabled = No
url = https://localhost:8089/services/receivers/simple
username =
password =
